import cv2
import numpy as np

# Параметри камер
camera_matrix1 = np.array([[800, 0, 320], [0, 800, 240], [0, 0, 1]], dtype=np.float32)
camera_matrix2 = np.array([[750, 0, 300], [0, 750, 200], [0, 0, 1]], dtype=np.float32)

# Результати стерео калібрування (з попереднього кроку)
R_stereo = np.array([[ 0.93575479, -0.30293271, -0.18054014],
                     [ 0.28316496,  0.95058062, -0.12733453],
                     [ 0.21019175,  0.06803125,  0.9752903 ]])
T_stereo = np.array([[ 0.68054014], [-0.07266548], [-0.6752903 ]])

# Обчислення істотної матриці (E)
# Істотна матриця E = [t]x * R, де [t]x — це матриця векторного добутку для вектора трансляції t
t_cross = np.array([[ 0, -T_stereo[2, 0], T_stereo[1, 0]],
                    [ T_stereo[2, 0], 0, -T_stereo[0, 0]],
                    [-T_stereo[1, 0], T_stereo[0, 0], 0]])

E = np.dot(t_cross, R_stereo)

# Розрахунок фундаментальної матриці F = K2^(-1) * E * K1^(-T)
F = np.dot(np.linalg.inv(camera_matrix2), np.dot(E, np.linalg.inv(camera_matrix1).T))

# Виведення результатів
print("Розрахована фундаментальна матриця (F):")
print(F)
print("\nРозрахована істотна матриця (E):")
print(E)

# Порівняння з результатами стерео калібрування
# Виведення істотної матриці та фундаментальної матриці з результатів стерео калібрування
print("\nРезультати стерео калібрування:")
print(f"Фундаментальна матриця (F) з результатів стерео калібрування:\n{F}")
print(f"Істотна матриця (E) з результатів стерео калібрування:\n{E}")
